
export type Language = 'en' | 'hi' | 'te';

interface LanguageData {
  code: Language;
  name: string;
  flag: string;
}

interface Translations {
  [key: string]: {
    [lang in Language]: string;
  };
}

const translations: Translations = {
  'nav.logout': {
    en: 'Logout',
    hi: '‡§≤‡•â‡§ó‡§Ü‡§â‡§ü',
    te: '‡∞≤‡∞æ‡∞ó‡±ç‡∞Ö‡∞µ‡±Å‡∞ü‡±ç'
  },
  'common.search': {
    en: 'Search',
    hi: '‡§ñ‡•ã‡§ú‡•á‡§Ç',
    te: '‡∞µ‡±Ü‡∞§‡∞ï‡∞Ç‡∞°‡∞ø'
  },
  'common.add': {
    en: 'Add',
    hi: '‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
    te: '‡∞ú‡±ã‡∞°‡∞ø‡∞Ç‡∞ö‡±Å'
  },
  'common.cancel': {
    en: 'Cancel',
    hi: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
    te: '‡∞∞‡∞¶‡±ç‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞ø'
  },
  'category.leafy': {
    en: 'Leafy Greens',
    hi: '‡§™‡§§‡•ç‡§§‡•á‡§¶‡§æ‡§∞ ‡§∏‡§¨‡•ç‡§ú‡§ø‡§Ø‡§æ‡§Ç',
    te: '‡∞Ü‡∞ï‡±Å ‡∞ï‡±Ç‡∞∞‡∞≤‡±Å'
  },
  'category.root': {
    en: 'Root Vegetables',
    hi: '‡§ú‡§°‡§º ‡§µ‡§æ‡§≤‡•Ä ‡§∏‡§¨‡•ç‡§ú‡§ø‡§Ø‡§æ‡§Ç',
    te: '‡∞µ‡±á‡∞∞‡±ç ‡∞ï‡±Ç‡∞∞‡∞≤‡±Å'
  },
  'category.other': {
    en: 'Other Vegetables',
    hi: '‡§Ö‡§®‡•ç‡§Ø ‡§∏‡§¨‡•ç‡§ú‡§ø‡§Ø‡§æ‡§Ç',
    te: '‡∞á‡∞§‡∞∞ ‡∞ï‡±Ç‡∞∞‡∞≤‡±Å'
  },
  'category.fruits': {
    en: 'Fruits',
    hi: '‡§´‡§≤',
    te: '‡∞™‡∞Ç‡∞°‡±ç‡∞≤‡±Å'
  },
  'category.berries': {
    en: 'Berries',
    hi: '‡§¨‡•á‡§∞‡•Ä',
    te: '‡∞¨‡±Ü‡∞∞‡±ç‡∞∞‡±Ä‡∞≤‡±Å'
  },
  'delivery.direct': {
    en: 'Direct Buy',
    hi: '‡§∏‡•Ä‡§ß‡•Ä ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•Ä',
    te: '‡∞™‡±ç‡∞∞‡∞§‡±ç‡∞Ø‡∞ï‡±ç‡∞∑ ‡∞ï‡±ä‡∞®‡±Å‡∞ó‡±ã‡∞≤‡±Å'
  },
  'delivery.hire': {
    en: 'Hire Delivery',
    hi: '‡§°‡§ø‡§≤‡•Ä‡§µ‡§∞‡•Ä ‡§¨‡•Å‡§ï ‡§ï‡§∞‡•á‡§Ç',
    te: '‡∞°‡±Ü‡∞≤‡∞ø‡∞µ‡∞∞‡±Ä ‡∞¨‡±Å‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø'
  },
  'delivery.fee': {
    en: 'Delivery Fee',
    hi: '‡§°‡§ø‡§≤‡•Ä‡§µ‡§∞‡•Ä ‡§∂‡•Å‡§≤‡•ç‡§ï',
    te: '‡∞°‡±Ü‡∞≤‡∞ø‡∞µ‡∞∞‡±Ä ‡∞∞‡±Å‡∞∏‡±Å‡∞Æ‡±Å'
  },
  'product.quantity': {
    en: 'Quantity',
    hi: '‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ',
    te: '‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç'
  }
};

class LanguageStore {
  private currentLanguage: Language = 'en';
  
  private languages: LanguageData[] = [
    { code: 'en', name: 'English', flag: 'üá∫üá∏' },
    { code: 'hi', name: '‡§π‡§ø‡§Ç‡§¶‡•Ä', flag: 'üáÆüá≥' },
    { code: 'te', name: '‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å', flag: 'üáÆüá≥' }
  ];

  getCurrentLanguage(): Language {
    return this.currentLanguage;
  }

  setLanguage(language: Language) {
    this.currentLanguage = language;
    localStorage.setItem('selectedLanguage', language);
  }

  getLanguages(): LanguageData[] {
    return this.languages;
  }

  translate(key: string): string {
    const translation = translations[key];
    if (!translation) {
      console.warn(`Translation missing for key: ${key}`);
      return key;
    }
    return translation[this.currentLanguage] || translation.en || key;
  }

  constructor() {
    const savedLanguage = localStorage.getItem('selectedLanguage') as Language;
    if (savedLanguage && ['en', 'hi', 'te'].includes(savedLanguage)) {
      this.currentLanguage = savedLanguage;
    }
  }
}

export const languageStore = new LanguageStore();
